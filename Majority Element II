Given an integer array of size n, find all elements that appear more than âŒŠ n/3 âŒ‹ times.

Note: The algorithm should run in linear time and in O(1) space.

Example 1:

Input: [3,2,3]
Output: [3]
Example 2:

Input: [1,1,1,3,3,2,2,2]
Output: [1,2]

class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        k=len(nums)
        k=int(k/3)
        count={}
        for i in nums:
            if i in count:
                count[i]+=1
            else:
                count[i]=1
        
        res=[]
        key=list(count.keys())
        values=list(count.values())
        for i in range(len(values)):
            if values[i] >k:
                res.append(key[i])
        return res
